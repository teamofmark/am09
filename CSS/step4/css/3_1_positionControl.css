body{
    margin: 0;  height: 2000px;
}
.position_A{
    position: absolute; left: 300px; top: 300px; background-color: #fc0; width: 150px; height:150px;
}
.position_R{
    position: relative; width: 150px; height: 150px; margin: 0 auto; background-color: #0f0;
}
.position_R .position_A2{
    position: absolute;  background-color: #0ff;
    /* top: 50px; left: 50px; */
    right: -50px; bottom: -50px;
    width: 100%; height: 100%;
    /* width: 50px; height: 50px; */
    /* 
        ? 1. absolute 부여 시 -> 좌표 값이 없을 경우 그 위치에서 그대로 떠오름. / 너비 등의 규격이 없을 때 부모의 규격 영향을 받음
        ? 2. absolute 자손은 부모 공간을 상대적으로 사용하기 때문에 % 단위 사용시 부모 공간을 기준으로 계산 됨
        ? 3. 좌표 개념에는 right, bottom(css 입장에서)도 존재 함.
        ! position은 0 이라는 좌표 값을 사용 할 수 있는 환경이 가장 안정적
    */
}
.position_F{
    background-color: #f99; padding: 50px 0; position: fixed; left: 0; top: 0; width: 100%;
    z-index: 10;
}
/* 
    ? position: fixed은 무조건 화면 절대 좌표 (browser left / top) 기준으로 작동
    * browser의 scroll영향을 받지 않는다. (고정)
*/
.position_S{
    background-color: blueviolet; padding: 50px 0; position: sticky; top: 119px;
}
/* 
    ? position: sticky는 자신에게 부여된 top 좌표에 window.scroll이 도달할 경우 고정 된다. / 고정 외 상황 일 때는 absolute 화 됨.
    (계산 : browser 상단선 이 sticky에게 할당된 top좌표에 일치 되었을때)
    ! 하단 감지 불가 = 부모공간의 하단선은 넘어가지 못함
*/